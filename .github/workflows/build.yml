name: Build

# TODO:
# - how to publish release?
# - how to use cache in a vmactions?
# - what's a good value for the cache key? (for now, an OS-specific constant!)
# - how do I force cache avoidance? (when it's necessary to re-bootstrap for some reason)
# - is it possible to share the cache across repos? (I have many packages)
# - privileged would be nice
#   - https://github.com/actions/toolkit/issues/946
#   - https://github.com/actions/cache/pull/181

on:
  push:
    branches: ['main']

jobs:
  macos:
    name: >
      macOS
      ${{ matrix.osversion }}
    runs-on: macos-${{ matrix.osversion }}
    strategy:
      fail-fast: false
      matrix:
        osversion: ["12"] #, "11"
    steps:

    - name: Restore pkgsrc
      id: pkgsrc-restore
      uses: actions/cache/restore@v4
      with:
        path: ~/pkgsrc-current
        key: ${{ runner.os }}-${{ matrix.osversion }}-pkgsrc-${{ github.run_id }}
        restore-keys: ${{ runner.os }}-${{ matrix.osversion }}-pkgsrc-

    - name: Fetch pkgsrc
      id: pkgsrc-fetch
      run: |
        set -e
        if [ -d pkgsrc-current ]; then
          pushd pkgsrc-current
          find distfiles -type f | xargs rm -f
          find packages -type f | xargs rm -f
          git pull
          popd
        else
          git clone https://github.com/NetBSD/pkgsrc.git pkgsrc-current
        fi

    - name: Save pkgsrc
      id: pkgsrc-save
      uses: actions/cache/save@v4
      if: always()
      with:
        path: ~/pkgsrc-current
        key: ${{ steps.pkgsrc-restore.outputs.cache-primary-key }}

    - name: Restore bootstrap
      id: bootstrap-restore
      uses: actions/cache/restore@v4
      with:
        path: ~/pkg
        key: ${{ runner.os }}-${{ matrix.osversion }}-bootstrap-${{ github.run_id }}
        restore-keys: ${{ runner.os }}-${{ matrix.osversion }}-bootstrap-

    - name: Build bootstrap
      id: bootstrap-build
      run: |
        set -e
        pushd pkgsrc-current/bootstrap
        ./bootstrap --unprivileged --prefix ~/pkg
        PATH=~/pkg/sbin:~/pkg/bin:${PATH}
        cd ..
        ( cd */digest && bmake install )
        ( cd */nbpatch && bmake install )
        popd

    - name: Save bootstrap
      id: bootstrap-save
      uses: actions/cache/save@v4
      if: always()
      with:
        path: ~/pkg
        key: ${{ steps.bootstrap-restore.outputs.cache-primary-key }}

    - name: Checkout package
      uses: actions/checkout@v4
      with:
        path: this-schmonz-repo

    - name: Build package
      run: |
        set -e
        PATH=~/pkg/sbin:~/pkg/bin:${PATH}
        category=$(grep CATEGORIES= this-schmonz-repo/Makefile | awk '{print $2}')
        mv this-schmonz-repo pkgsrc-current/${category}
        pushd pkgsrc-current/${category}/this-schmonz-repo
        bmake package

        release_asset=$(bmake show-var VARNAME=PKGFILE)
        echo "release_asset=${release_asset}" >> "${GITHUB_ENV}"
        release_version=$(bmake show-var VARNAME=PKGVERSION)
        echo "release_version=${release_version}" >> "${GITHUB_ENV}"

    - name: Pretend to publish package
      run: |
        set -e
        echo "SCHMONZ: file to release is ${{ env.release_asset }}"
        echo "SCHMONZ: version to release is ${{ env.release_version }}"

    - name: Publish package
      uses: softprops/action-gh-release@v1
      if: false
      with:
        files: ${{ env.release_asset }}
        name: ${{ env.release_version }}
