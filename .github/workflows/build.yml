name: Build

# TODO:
# - need privileged pkgsrc, so it's conceivable that releases would work for anyone
#   - https://github.com/actions/toolkit/issues/946
#   - https://github.com/actions/cache/pull/181
#
# - how to use cache in a vmactions? (on host, probably)
#
# - is it possible to share the cache across repos? (I have many packages)
#
# - publish releases?
#   - only if all expected platforms pass the build?

on:
  push:
    branches: ['main']

jobs:
  macos:
    name: >
      macOS
      ${{ matrix.osversion }}
    runs-on: macos-${{ matrix.osversion }}
    strategy:
      fail-fast: true
      matrix:
        osversion: ["12"] #, "11"
    steps:
    - name: Checkout package
      uses: actions/checkout@v4
      with:
        path: this-schmonz-repo

    - name: Checkout pkgsrc
      uses: actions/checkout@v4
      with:
        repository: NetBSD/pkgsrc
        path: pkgsrc-current

    - name: Restore bootstrap
      id: bootstrap-restore
      uses: actions/cache/restore@v4
      with:
        path: ${HOME}/pkg
        key: ${{ runner.os }}-${{ matrix.osversion }}-bootstrap-${{ github.run_id }}
        restore-keys: ${{ runner.os }}-${{ matrix.osversion }}-bootstrap-

    - name: Build bootstrap
      id: bootstrap-build
      run: |
        set -e
        if [ -d ${HOME}/pkg ]; then
          echo "SCHMONZ: using previous bootstrap"
        else
          pushd ${GITHUB_WORKSPACE}/pkgsrc-current/bootstrap
          ./bootstrap --unprivileged --prefix ${HOME}/pkg
          PATH=${HOME}/pkg/sbin:${HOME}/pkg/bin:${PATH}
          cd ..
          ( cd */digest && bmake install )
          ( cd */nbpatch && bmake install )
          popd
        fi

    - name: Save bootstrap
      id: bootstrap-save
      uses: actions/cache/save@v4
      if: always()
      with:
        path: ${HOME}/pkg
        key: ${{ steps.bootstrap-restore.outputs.cache-primary-key }}

    - name: Build package
      run: |
        set -e
        PATH=${HOME}/pkg/sbin:${HOME}/pkg/bin:${PATH}
        category=$(grep CATEGORIES= ${GITHUB_WORKSPACE}/this-schmonz-repo/Makefile | awk '{print $2}')
        mv ${GITHUB_WORKSPACE}/this-schmonz-repo ${GITHUB_WORKSPACE}/pkgsrc-current/${category}
        pushd ${GITHUB_WORKSPACE}/pkgsrc-current/${category}/this-schmonz-repo
        bmake package

        release_version=$(bmake show-var VARNAME=PKGVERSION)
        mv $(bmake show-var VARNAME=PKGFILE) ..
        cd ..
        for i in *.tgz; do
          mv $i ${{ runner.os }}-${{ matrix.osversion }}-unprivileged-$i
        done
        release_asset=$(echo *.tgz)
        echo "release_asset=${release_asset}" >> "${GITHUB_ENV}"
        echo "release_version=${release_version}" >> "${GITHUB_ENV}"

    - name: Pretend to publish package
      run: |
        set -e
        echo "FILE: ${{ env.release_asset }}"
        echo "VERSION: version ${{ env.release_version }}"

    - name: Publish package
      uses: softprops/action-gh-release@v1
      if: false
      with:
        files: ${{ env.release_asset }}
        name: ${{ env.release_version }}
