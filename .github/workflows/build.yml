name: Build

# TODO:
# - how to publish release?
# - how to use cache in a vmactions?
# - what's a good value for the cache key? (for now, an OS-specific constant!)
# - how do I force cache avoidance? (when it's necessary to re-bootstrap for some reason)
# - is it possible to share the cache across repos? (I have many packages)
# - privileged would be nice
#   - https://github.com/actions/toolkit/issues/946
#   - https://github.com/actions/cache/pull/181

on:
  push:
    branches: ['main']

jobs:
  macos:
    name: >
      macOS
      ${{ matrix.osversion }}
    runs-on: macos-${{ matrix.osversion }}
    strategy:
      fail-fast: false
      matrix:
        osversion: ["12"] #, "11"
    steps:
    - name: Cache pkgsrc
      id: cache-pkgsrc
      uses: actions/cache@v4
      with:
        path: ${GITHUB_WORKSPACE}/pkgsrc-current
        key: ${{ runner.os }}-${{ matrix.osversion }}-pkgsrc

    - name: Fetch pkgsrc
      if: steps.cache-pkgsrc.outputs.cache-hit != 'true'
      run: |
        set -e
        if [ -d pkgsrc-current ]; then
          pushd pkgsrc-current
          find distfiles -type f | xargs rm -f
          find packages -type f | xargs rm -f
          git pull
          popd
        else
          git clone https://github.com/NetBSD/pkgsrc.git pkgsrc-current
        fi

    - name: Cache pkgsrc bootstrap
      id: cache-pkgsrc-bootstrap
      uses: actions/cache@v4
      with:
        path: ${GITHUB_WORKSPACE}/pkg
        key: ${{ runner.os }}-${{ matrix.osversion }}-pkgsrc-bootstrap

    - name: Build pkgsrc bootstrap
      if: steps.cache-pkgsrc-bootstrap.outputs.cache-hit != 'true'
      run: |
        set -e
        pushd pkgsrc-current/bootstrap
        ./bootstrap --unprivileged --prefix ${GITHUB_WORKSPACE}/pkg
        PATH=${GITHUB_WORKSPACE}/pkg/sbin:${GITHUB_WORKSPACE}/pkg/bin:${PATH}
        cd ..
        ( cd */digest && bmake install )
        ( cd */nbpatch && bmake install )
        popd

    - name: Checkout package
      uses: actions/checkout@v4
      with:
        path: this-schmonz-repo

    - name: Build package
      run: |
        set -e
        PATH=${GITHUB_WORKSPACE}/pkg/sbin:${GITHUB_WORKSPACE}/pkg/bin:${PATH}
        category=$(grep CATEGORIES= this-schmonz-repo/Makefile | awk '{print $2}')
        mv this-schmonz-repo pkgsrc-current/${category}
        pushd pkgsrc-current/${category}/this-schmonz-repo
        bmake package
        pkgfile=$(bmake show-var VARNAME=PKGFILE)
        ls -l ${pkgfile}
        pkg_info -L ${pkgfile}

        # publish release
        # XXX how?
