name: VM

# TODO:
#
# raise vmactions issue for nonexistent ${GITHUB_ENV} parent directory
# raise vmactions issue for sshfs maybe not working on NetBSD? (try FreeBSD first)
#
# try cross-platform-actions/action

on:
  push:
    branches: ['main']

jobs:
  netbsd:
    name: >
      NetBSD
      ${{ matrix.osversion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        osversion: ["9.3"]
    steps:
    - name: Restore bootstrap
      id: bootstrap-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/cached-netbsd-opt-pkg
        key: NetBSD-${{ matrix.osversion }}-bootstrap-${{ github.run_id }}
        restore-keys: NetBSD-${{ matrix.osversion }}-bootstrap-

    - name: Build bootstrap and packages
      id: bootstrap-build
      uses: vmactions/netbsd-vm@v1
      with:
        release: ${{ matrix.osversion }}
        usesh: true
        prepare: |
          /usr/sbin/pkg_add git-base
        run: |
          set -e
          
          # this all runs as root (whereas host runs as non-root)

          mkdir -p $(dirname ${GITHUB_ENV})

          git clone --depth=1 ${GITHUB_SERVER_URL}/NetBSD/pkgsrc
          git clone --depth=1 ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} pkgsrc/${GITHUB_REPOSITORY}

          unset PKG_PATH
          if [ -d ${GITHUB_WORKSPACE}/cached-netbsd-opt-pkg ]; then
            mkdir -p /opt
            mv ${GITHUB_WORKSPACE}/cached-netbsd-opt-pkg /opt/pkg
          else
            cd pkgsrc/bootstrap
            ./bootstrap --prefix /opt/pkg
            ./cleanup
          fi
          PATH=/opt/pkg/sbin:/opt/pkg/bin:${PATH}
          cd pkgsrc/${GITHUB_REPOSITORY}
          bmake package

          mkdir ${GITHUB_WORKSPACE}/release-contents

          release_version=$(bmake show-var VARNAME=PKGVERSION)

          mv $(bmake show-var VARNAME=PKGFILE) ${GITHUB_WORKSPACE}/release-contents
          cd ${GITHUB_WORKSPACE}/release-contents
          for i in *.tgz; do
            mv $i NetBSD-${{ matrix.osversion }}-$i
          done
          release_asset=$(echo *.tgz)

          echo "release_version=${release_version}" >> "${GITHUB_ENV}"
          echo "release_asset=${GITHUB_WORKSPACE}/release-contents/${release_asset}" >> "${GITHUB_ENV}"

          # put installed package tools where rsync can copy them out to host
          # XXX will this preserve all the root permissions?
          # probably I should tar it up myself
          mv /opt/pkg ${GITHUB_WORKSPACE}/cached-netbsd-opt-pkg

          rm -rf ${GITHUB_WORKSPACE}/pkgsrc

    - name: Save bootstrap
      id: bootstrap-save
      uses: actions/cache/save@v4
      if: always()
      with:
        path: ${{ github.workspace }}/cached-netbsd-opt-pkg
        key: ${{ steps.bootstrap-restore.outputs.cache-primary-key }}

    - name: Pretend to publish package
      run: |
        set -e
        echo "VERSION: version ${{ env.release_version }}"
        echo "FILE: ${{ env.release_asset }}"
        echo "CONTENTS: $(tar -ztf ${{ env.release_asset }})"

    - name: Publish package
      uses: softprops/action-gh-release@v1
      if: false
      with:
        files: ${{ env.release_asset }}
        name: ${{ env.release_version }}
