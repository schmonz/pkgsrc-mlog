name: VM

# TODO:
#
# 2. Raise vmactions issues:
#    - I shouldn't have to mkdir ${GITHUB_ENV}'s parent dir (NetBSD only?)
#    - sshfs doesn't work on NetBSD (how about FreeBSD?)
#    - if sshfs works and is fast on all platforms, clone pkgsrc only 1x (on the host)
#    - How can I define a matrix mapping from guest OS to vmactions/foo-vm?
#
# 3. Add native builds for Ubuntu, macOS
#
# 4. Set bootstrap prefix to match available binary package repos,
#    or else the default for the platform
#    - mostly /usr/pkg (and /usr/pkg/pkgdb)
#    - macOS: /opt/pkg to avoid SIP and match pkgsrc.smartos.org
#    - SmartOS: what's the default in their repos?
#
# 5. Add all available vmactions platforms
#
# 6. Add non-x86 BSD platforms via cross-platform-actions
#    - File an issue requesting NetBSD 10 aarch64
#
# 7. Publish all available binary packages

on:
  push:
    branches: [main]

jobs:
  freebsd-x64:
    name: >
      ${{ matrix.os.uname }}
      ${{ matrix.os.arch }}
      ${{ matrix.os.version }}
    runs-on: ${{ matrix.os.host }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - uname: FreeBSD
            lname: freebsd
            arch: amd64
            version: '14.0'
            host: ubuntu-latest
            prep: |
              set -e
              pkg install -y git
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: move-under-pkgsrc-once-you-have-pkgsrc

    - name: Restore bootstrap
      id: bootstrap-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/cached-${{ matrix.os.lname }}-${{ matrix.os.arch }}-${{ matrix.os.version }}-opt-pkg
        key: ${{ matrix.os.lname }}-${{ matrix.os.arch }}-${{ matrix.os.version }}-bootstrap-${{ github.run_id }}
        restore-keys: ${{ matrix.os.lname }}-${{ matrix.os.arch }}-${{ matrix.os.version }}-bootstrap-

    - name: Build bootstrap and packages
      id: bootstrap-build
      uses: vmactions/freebsd-vm@v1
      with:
        release: ${{ matrix.os.version }}
        usesh: true
        sync: sshfs
        prepare: |
          set -e
          ${{ matrix.os.prep }}
        run: |
          set -e
          # work around vmactions bug
          mkdir -p $(dirname ${GITHUB_ENV})
          # fetch pkgsrc and overlay this repo
          git clone --verbose --depth=1 ${GITHUB_SERVER_URL}/NetBSD/pkgsrc
          mkdir -p pkgsrc/schmonz
          mv move-under-pkgsrc-once-you-have-pkgsrc pkgsrc/${GITHUB_REPOSITORY}
          # do the real work
          ${SHELL} ./pkgsrc/${GITHUB_REPOSITORY}/.github/workflows/bootstrap-and-build.sh ${{ matrix.os.lname }} ${{ matrix.os.arch }} ${{ matrix.os.version }}

    - name: Save bootstrap
      id: bootstrap-save
      uses: actions/cache/save@v4
      if: always()
      with:
        path: ${{ github.workspace }}/cached-${{ matrix.os.lname }}-${{ matrix.os.arch }}-${{ matrix.os.version }}-opt-pkg
        key: ${{ steps.bootstrap-restore.outputs.cache-primary-key }}

    - name: Pretend to publish package
      run: |
        set -e
        echo "VERSION: version ${{ env.release_version }}"
        echo "FILE: ${{ env.release_asset }}"

    - name: Publish package
      uses: softprops/action-gh-release@v1
      if: false
      with:
        files: ${{ env.release_asset }}
        name: ${{ env.release_version }}

  netbsd-x64:
    name: >
      ${{ matrix.os.uname }}
      ${{ matrix.os.arch }}
      ${{ matrix.os.version }}
    runs-on: ${{ matrix.os.host }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - uname: NetBSD
            lname: netbsd
            arch: amd64
            version: '9.3'
            host: ubuntu-latest
            prep: |
              set -e
              /usr/sbin/pkg_add git-base
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: move-under-pkgsrc-once-you-have-pkgsrc

    - name: Restore bootstrap
      id: bootstrap-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/cached-${{ matrix.os.lname }}-${{ matrix.os.arch }}-${{ matrix.os.version }}-opt-pkg
        key: ${{ matrix.os.lname }}-${{ matrix.os.arch }}-${{ matrix.os.version }}-bootstrap-${{ github.run_id }}
        restore-keys: ${{ matrix.os.lname }}-${{ matrix.os.arch }}-${{ matrix.os.version }}-bootstrap-

    - name: Build bootstrap and packages
      id: bootstrap-build
      uses: vmactions/netbsd-vm@v1
      with:
        release: ${{ matrix.os.version }}
        usesh: true
        sync: sshfs
        prepare: |
          set -e
          ${{ matrix.os.prep }}
        run: |
          set -e
          # work around vmactions bug
          mkdir -p $(dirname ${GITHUB_ENV})
          # fetch pkgsrc and overlay this repo
          git clone --verbose --depth=1 ${GITHUB_SERVER_URL}/NetBSD/pkgsrc
          mkdir -p pkgsrc/schmonz
          mv move-under-pkgsrc-once-you-have-pkgsrc pkgsrc/${GITHUB_REPOSITORY}
          # do the real work
          ${SHELL} ./pkgsrc/${GITHUB_REPOSITORY}/.github/workflows/bootstrap-and-build.sh ${{ matrix.os.lname }} ${{ matrix.os.arch }} ${{ matrix.os.version }}

    - name: Save bootstrap
      id: bootstrap-save
      uses: actions/cache/save@v4
      if: always()
      with:
        path: ${{ github.workspace }}/cached-${{ matrix.os.lname }}-${{ matrix.os.arch }}-${{ matrix.os.version }}-opt-pkg
        key: ${{ steps.bootstrap-restore.outputs.cache-primary-key }}

    - name: Pretend to publish package
      run: |
        set -e
        echo "VERSION: version ${{ env.release_version }}"
        echo "FILE: ${{ env.release_asset }}"

    - name: Publish package
      uses: softprops/action-gh-release@v1
      if: false
      with:
        files: ${{ env.release_asset }}
        name: ${{ env.release_version }}
