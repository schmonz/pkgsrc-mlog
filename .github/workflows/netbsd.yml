name: VM

# TODO:
#
# raise vmactions issue for nonexistent ${GITHUB_ENV} parent directory
# raise vmactions issue for sshfs maybe not working on NetBSD? (try FreeBSD first)
# /opt/pkg for macOS, /usr/pkg for everything else, so the packages could conceivably match official packages
# NetBSD
# - 22m27s sans cached bootstrap (and with all the pkgin steps)
# - 

on:
  push:
    branches: ['main']

jobs:
  vmactions:
    name: >
      ${{ matrix.os.uname }}
      ${{ matrix.os.version }}
      ${{ matrix.os.arch }}
    runs-on: ${{ matrix.os.host }}
    strategy:
      fail-fast: false
      matrix:
        os:
          #- uname: FreeBSD
          #  lname: freebsd
          #  arch: x86-64
          #  version: '13.2' # XXX list?
          #  host: macos-latest
          #  prep: |
          #    sudo pkg install -y git
          - uname: NetBSD
            lname: netbsd
            arch: x86-64
            version: '9.3'
            host: macos-latest
            prep: |
              sudo pkgin -y install mozilla-rootcerts git-base
              sudo /usr/pkg/sbin/mozilla-rootcerts install
          #- uname: OpenBSD
          #  lname: openbsd
          #  arch: arm64
          #  version: '7.4'
          #  host: ubuntu-latest
          #  prep: |
          #    sudo pkg_add git
    steps:
    - name: Restore bootstrap
      id: bootstrap-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/cached-${{ matrix.os.lname }}-${{ matrix.os.version }}-${{ matrix.os.arch }}-opt-pkg
        key: ${{ matrix.os.uname }}-${{ matrix.os.version }}-${{ matrix.os.arch }}-bootstrap-${{ github.run_id }}
        restore-keys: ${{ matrix.os.uname }}-${{ matrix.os.version }}-${{ matrix.os.arch }}-bootstrap-

    - name: Build bootstrap and packages
      id: bootstrap-build
      uses: cross-platform-actions/action@v0.22.0
      with:
        operating_system: ${{ matrix.os.lname }}
        version: ${{ matrix.os.version }}
        architecture: ${{ matrix.os.arch }}
        shell: sh
        run: |
          set -e
          ${{ matrix.os.prep }}
          # work around vmactions bug
          mkdir -p $(dirname ${GITHUB_ENV})
          # fetch pkgsrc + this package
          git clone --verbose --depth=1 ${GITHUB_SERVER_URL}/NetBSD/pkgsrc
          git clone --verbose --depth=1 ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} pkgsrc/${GITHUB_REPOSITORY}
          # bootstrap pkgsrc
          unset PKG_PATH
          if [ -d ${GITHUB_WORKSPACE}/cached-${{ matrix.os.lname }}-${{ matrix.os.version }}-${{ matrix.os.arch }}-opt-pkg ]; then
            sudo mkdir -p /opt
            sudo mv ${GITHUB_WORKSPACE}/cached-${{ matrix.os.lname }}-${{ matrix.os.version }}-${{ matrix.os.arch }}-opt-pkg /opt/pkg
          else
            cd pkgsrc/bootstrap
            sudo ./bootstrap --prefix /opt/pkg
            sudo ./cleanup
            cd ../..
          fi
          # build this package
          PATH=/opt/pkg/sbin:/opt/pkg/bin:${PATH}
          cd pkgsrc/${GITHUB_REPOSITORY}
          bmake SU_CMD="sudo ${SHELL} -c" package
          # gather up artifacts
          release_version=$(bmake show-var VARNAME=PKGVERSION)
          echo "release_version=${release_version}" >> "${GITHUB_ENV}"
          mkdir ${GITHUB_WORKSPACE}/release-contents
          mv $(bmake show-var VARNAME=PKGFILE) ${GITHUB_WORKSPACE}/release-contents
          cd ${GITHUB_WORKSPACE}/release-contents
          for i in *.tgz; do mv $i ${{ matrix.os.lname }}-${{ matrix.os.version }}-${{ matrix.os.arch }}-$i; done
          release_asset=$(echo *.tgz)
          echo "release_asset=${GITHUB_WORKSPACE}/release-contents/${release_asset}" >> "${GITHUB_ENV}"
          # put bootstrap somewhere cacheable
          sudo mv /opt/pkg ${GITHUB_WORKSPACE}/cached-${{ matrix.os.lname }}-${{ matrix.os.version }}-${{ matrix.os.arch }}-opt-pkg
          # avoid unneeded big slow rsync
          rm -rf ${GITHUB_WORKSPACE}/pkgsrc

    - name: Save bootstrap
      id: bootstrap-save
      uses: actions/cache/save@v4
      if: always()
      with:
        path: ${{ github.workspace }}/cached-${{ matrix.os.lname }}-${{ matrix.os.version }}-${{ matrix.os.arch }}-opt-pkg
        key: ${{ steps.bootstrap-restore.outputs.cache-primary-key }}

    - name: Pretend to publish package
      run: |
        set -e
        echo "VERSION: version ${{ env.release_version }}"
        echo "FILE: ${{ env.release_asset }}"
